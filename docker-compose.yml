version: '3'

services:

  database:
    image: 'postgres:latest'

    ports:
      - 5432:5432

    environment:
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME

  broker:
    image: rabbitmq:3.11-management
    ports:
     - 5672:5672
     - 15672:15672
    env_file:
     - .env
    environment:
      RABBITMQ_DEFAULT_USER: $BROKER_USERNAME
      RABBITMQ_DEFAULT_PASS: $BROKER_PASSWORD

  redis:
    image: redis:latest

    command: redis-server --appendonly yes --requirepass $REDIS_PASSWORD
    env_file:
     - .env

  minio:
    image: minio/minio
    ports:
     - 9000:9000
     - 9001:9001
    env_file:
     - .env
    environment:
      MINIO_ACCESS_KEY: $AWS_ACCESS_KEY_ID
      MINIO_SECRET_KEY: $AWS_SECRET_ACCESS_KEY
    command: server /data --console-address ":9001"

  createbucket:
    image: minio/mc
    depends_on:
      - minio
    env_file:
     - .env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add jmonminio $AWS_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY;
      /usr/bin/mc mb jmonminio/$AWS_BUCKET_NAME;
      exit 0;
      "

  dbupgrade:
    build: .
    command: alembic upgrade head
    env_file:
     - .env
    links:
     - database

  server:
    build:
      context: .
      dockerfile: Dockerfile.server

    command: python3 -u ./server.py
    env_file:
     - .env

    ports:
     - 5000:5000
    links:
     - database
     - broker
     - redis

  scheduler:
    build: .
    command: celery -A jmon.scheduler.app beat -S redbeat.RedBeatScheduler
    env_file:
     - .env
    links:
     - database
     - broker
     - minio
     - redis

  flower:
    build: .
    command: celery -A jmon.app flower --host=0.0.0.0
    ports:
     - 5555:5555
    env_file:
     - .env
    links:
     - database
     - broker
     - minio
     - redis

  agent:
    build: .
    # Specify the test types as queues (requests, chrome, firefox)
    # At least once agent must have the 'default' queue
    # Concurrency should always be set to 1 - to add more concurrency,
    # scale the agent containers
    command: celery -A jmon.worker.app worker -Q default,requests,chrome,firefox --concurrency=1 --loglevel=INFO
    env_file:
     - .env
    links:
     - database
     - broker
     - minio
     - redis
    # Mount noficiation plugins
    volumes:
     - ./jmon/plugins/notifications:/app/jmon/plugins/notifications:ro
